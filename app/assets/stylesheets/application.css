/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

header {
  width: 90%;
  padding: 15px 0;
  margin: 0 auto;
  text-align: center;
  position: relative;
}

.heading {
  font-size: 32px;
}

nav{
  background:#333;
  color:#fff;
  text-align: center;
}
/*ナビゲーションを横並びに*/
nav ul{
  list-style: none;
  display: flex;
  justify-content: center;
}
/*2階層目以降は横並びにしない*/
nav ul ul{
  display: block;
}

/*下の階層のulや矢印の基点にするためliにrelativeを指定*/
nav ul li{
  position: relative;
}

/*ナビゲーションのリンク設定*/
nav ul li a{
  display: block;
  text-decoration: none;
  color: #999;
  padding:20px 35px;
  transition:all .3s;
}

nav ul li li a{
  padding:10px 35px;
}

nav ul li a:hover{
  color:#fff;
}

/*==矢印の設定*/

/*2階層目を持つliの矢印の設定*/
nav ul li.has-child::before{
  content:'';
  position: absolute;
  left:15px;
  top:25px;
  width:6px;
  height:6px;
  border-top: 2px solid #999;
    border-right:2px solid #999;
    transform: rotate(135deg);
}

/*3階層目を持つliの矢印の設定*/
nav ul ul li.has-child::before{
  content:'';
  position: absolute;
  left:6px;
  top:17px;
  width:6px;
  height:6px;
    border-top: 2px solid #fff;
    border-right:2px solid #fff;
    transform: rotate(45deg);
}

/*== 2・3階層目の共通設定 */

/*下の階層を持っているulの指定*/
nav li.has-child ul{
    /*絶対配置で位置を指定*/
  position: absolute;
  left:0;
  top:62px;
  z-index: 4;
    /*形状を指定*/
  background:#28BFE7;
  width:180px;
    /*はじめは非表示*/
  visibility: hidden;
  opacity: 0;
    /*アニメーション設定*/
  transition: all .3s;
}

/*hoverしたら表示*/
nav li.has-child:hover > ul,
nav li.has-child ul li:hover > ul,
nav li.has-child:active > ul,
nav li.has-child ul li:active > ul{
  visibility: visible;
  opacity: 1;
}

/*ナビゲーションaタグの形状*/
nav li.has-child ul li a{
  color: #fff;
  border-bottom:solid 1px rgba(255,255,255,0.6);
}

nav li.has-child ul li:last-child a{
  border-bottom:none;
}

nav li.has-child ul li a:hover,
nav li.has-child ul li a:active{
  background:#3577CA;
}


section.typeB{
	display: flex;
	flex-wrap: wrap;
}
section.typeB::after {
	content: '';
	width: 100%;
	height: 3px;
	display: block;
	order: -1;
	background: rgba(0,0,0,.1);
}
section.typeB .tabLabel {	/* タブ */
	margin-right: 3px;
	padding: 3px 12px;
	flex: 1;
	order: -1;
	border-radius: 3px 3px 0 0;
	color: #444;
	background: rgba(0,137,167,.3);
	position: relative;
	transition: .5s ;
	cursor: pointer;
}
section.typeB .tabLabel::after {
	content: '';
	width: 100% ;
	height: 3px;
	display: block;
	pointer-events: none;
	transform: translateX(100%);
	transition: cubic-bezier(0.4, 0, 0.2, 1) .2s 80ms;
	background: #EFBB24;
	position: absolute;
	left: 0;
	bottom: -3px;
	z-index: 10;
	opacity: 0;
}
section.typeB .tabLabel:nth-last-of-type(1){ margin-right: 0; }
section.typeB input {		/* ラジオボタン非表示 */
	display: none;
}
section.typeB .content {	/* 本文 */
	width: 100%;
	height:0;
	overflow:hidden;
	box-shadow: 0 0 5px rgba(0,0,0,.2);
	opacity:0;
}
section.typeB .content > div {
	pointer-events:none;
	transform: translateX(30%);
	transition: transform .3s 80ms, opacity .3s 80ms;
}
/*アクティブ設定*/
section.typeB input:checked + .tabLabel {		/*タブ*/
	color: #fff;
	background: rgba(0,137,167,.7);
}
section.typeB input:checked ~ .tabLabel::after {
	transform: translateX(-100%);
}
section.typeB input:checked + .tabLabel::after {
	opacity: 1;
	transform: translateX(0);
}
section.typeB input:checked + .tabLabel + .content {	/*本文*/
	height: auto;
	padding: 15px;
	order: 1;
	opacity: 1;
}
section.typeB input:checked ~ .content > div {
	transform: translateX(30%);
}
section.typeB input:checked + .tabLabel + .content > div {
	pointer-events:auto;
	transform: translateX(0);
}